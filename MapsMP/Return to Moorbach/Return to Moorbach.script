//-- Return to Moorbach --//
//By Strangelove
//v0.9
//19.03.2025
//Developed for r10540
//Last Tested on 15472

{$I Scripts/tools.script}
{$I Scripts/improvestaticai.script}
{$I Scripts/townhallai.script}
{$I Scripts/difficulty.script}


const
	Offset_Y = 32; //Adjust for increased MapSize

var
	DifficultySetting: TKMMissionDifficulty;


procedure OnMissionStart();
var
	p: Integer;
	StartPosition: TKMPoint;
begin
	DifficultySetting := States.MissionDifficulty();

	//[Very Easy, Easier, Easy, Normal, Hard, Harder, Very Hard]
	EquipRateMod := [2, 1.5, 1.25, 1, 0.75, 0.5, 0.3];
	RecruitDelayMod := [2, 1.5, 1.25, 1, 1, 1, 1];
	RecruitLimitMod := [1, 1, 1, 1, 1.33, 1.66, 2];
	WorkerLimitMod := [1, 1, 1, 1, 1.33, 1.66, 2];

	case DifficultySetting of
		mdHard1, mdHard2:
		begin
			//Add Towers for Player6
			GiveHouseAndConnect(6, 17, 115, 15);
			GiveHouseAndConnect(6, 17, 114, 7);
			GiveHouseAndConnect(6, 17, 117, 23);
			GiveHouseAndConnect(6, 17, 140, 46);
			GiveHouseAndConnect(6, 17, 149, 49);
			GiveHouseAndConnect(6, 17, 132, 41);
			GiveHouseAndConnect(6, 17, 125, 36);
			GiveHouseAndConnect(6, 17, 155, 50);
			GiveHouseAndConnect(6, 17, 120, 30);
			//Add Townhall for Player2
			GiveHouseAndConnectEx(2, htTownhall, 23, 60);
		end;
		else begin
			//Add Coalmine instead of Townhall for Player2
			GiveHouseAndConnectEx(2, htCoalmine, 23, 60);
		end;
	end;
	
	//Update AIStartPositions
	for p := 0 to States.StatPlayerCount() -1 do
		if States.PlayerIsAI(p) then
		begin
			StartPosition := States.AIStartPosition(p);
			Actions.AIStartPosition(p, StartPosition.X, StartPosition.Y +Offset_Y);
		end;
end;

procedure OnTick();
begin
	//Make Waterfalls more dynamic (Change end tiles) Not automated yet...
	if States.GameTime() mod 6 = 0 then
	begin
		ChangeWaterfallEndTiles(37, 38, 14);
		ChangeWaterfallEndTiles(84, 85, 145);
	end;

	//Remove/Add Enemy Defence Positions and Groups
	if States.GameTime() = (MAX_HANDS +1) then
		case DifficultySetting of
			mdEasy3: //-14
			begin
				RemoveDefencePositionAndGroup(3, 17, 43);
				RemoveDefencePositionAndGroup(4, 156, 97);
				RemoveDefencePositionAndGroup(5, 83, 4);
				RemoveDefencePositionAndGroup(3, 12, 9);
				RemoveDefencePositionAndGroup(4, 157, 71);
				RemoveDefencePositionAndGroup(6, 125, 10);
				RemoveDefencePositionAndGroup(6, 144, 38);
				RemoveDefencePositionAndGroup(5, 81, 10);
				RemoveDefencePositionAndGroup(5, 144, 38);
				RemoveDefencePositionAndGroup(5, 75, 13);
				RemoveDefencePositionAndGroup(5, 78, 18);
				RemoveDefencePositionAndGroup(4, 124, 69);
				RemoveDefencePositionAndGroup(4, 127, 69);
				RemoveDefencePositionAndGroup(3, 8, 41);
			end;
			mdEasy2: //-12
			begin
				RemoveDefencePositionAndGroup(5, 83, 4);
				RemoveDefencePositionAndGroup(3, 12, 9);
				RemoveDefencePositionAndGroup(4, 157, 71);
				RemoveDefencePositionAndGroup(6, 125, 10);
				RemoveDefencePositionAndGroup(6, 144, 38);
				RemoveDefencePositionAndGroup(5, 81, 10);
				RemoveDefencePositionAndGroup(5, 144, 38);
				RemoveDefencePositionAndGroup(5, 75, 13);
				RemoveDefencePositionAndGroup(5, 78, 18);
				RemoveDefencePositionAndGroup(4, 124, 69);
				RemoveDefencePositionAndGroup(4, 127, 69);
				RemoveDefencePositionAndGroup(3, 8, 41);
			end;
			mdEasy1: //-9
			begin
				RemoveDefencePositionAndGroup(6, 125, 10);
				RemoveDefencePositionAndGroup(6, 144, 38);
				RemoveDefencePositionAndGroup(5, 81, 10);
				RemoveDefencePositionAndGroup(5, 144, 38);
				RemoveDefencePositionAndGroup(5, 75, 13);
				RemoveDefencePositionAndGroup(5, 78, 18);
				RemoveDefencePositionAndGroup(4, 124, 69);
				RemoveDefencePositionAndGroup(4, 127, 69);
				RemoveDefencePositionAndGroup(3, 8, 41);
			end;
			mdNormal: //-4
			begin
				RemoveDefencePositionAndGroup(5, 75, 13);
				RemoveDefencePositionAndGroup(5, 81, 10);
				RemoveDefencePositionAndGroup(4, 124, 69);
				RemoveDefencePositionAndGroup(4, 127, 69);
			end;
		end;
	
	//Initial Msg
	if States.GameTime() = 100 then
	begin
		Actions.ShowMsg(0, '<$0>');
		Actions.ShowMsg(1, '<$0>');

		//Reveal Resources
		Actions.FogRevealCircle(0, 68, 102 +Offset_Y, Utils.RandomRangeI(0, 2)); //Gold Mines Loc1
	    Actions.FogRevealCircle(0, 65, 110 +Offset_Y, Utils.RandomRangeI(0, 2));
	    Actions.FogRevealCircle(0, 68, 109 +Offset_Y, Utils.RandomRangeI(0, 2));
	    Actions.FogRevealCircle(0, 73, 113 +Offset_Y, Utils.RandomRangeI(0, 2));
	    Actions.FogRevealCircle(0, 76, 115 +Offset_Y, Utils.RandomRangeI(0, 2));
	    Actions.FogRevealCircle(0, 39, 108 +Offset_Y, Utils.RandomRangeI(0, 3)); //Iron Mines
	    Actions.FogRevealCircle(0, 39, 120 +Offset_Y, Utils.RandomRangeI(0, 3));
	    Actions.FogRevealCircle(0, 35, 127 +Offset_Y, Utils.RandomRangeI(0, 3));
	    Actions.FogRevealCircle(0, 26, 129 +Offset_Y, Utils.RandomRangeI(0, 3));
	    Actions.FogRevealCircle(0, 14, 140 +Offset_Y, Utils.RandomRangeI(0, 3));
	    Actions.FogRevealCircle(0, 7, 148 +Offset_Y, Utils.RandomRangeI(0, 3));

		Actions.FogRevealCircle(1, 92, 117 +Offset_Y, Utils.RandomRangeI(0, 2)); //Gold Mines Loc2
		Actions.FogRevealCircle(1, 93, 123 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 97, 122 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 101, 121 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 100, 114 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 103, 115 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 107, 118 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 109, 112 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 129, 126 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 132, 131 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 137, 134 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 140, 133 +Offset_Y, Utils.RandomRangeI(0, 2));
		Actions.FogRevealCircle(1, 144, 135 +Offset_Y, Utils.RandomRangeI(0, 2));
	    Actions.FogRevealCircle(1, 146, 131 +Offset_Y, Utils.RandomRangeI(0, 2));
    end;
end;