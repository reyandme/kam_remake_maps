{$I constants.script}  // By Greeny
{$I improvestaticai.script}  /// By Strangelove
{$I zzcmAntiLure.script} /// By Cmowla
{$I DamageCloseBuildings.script} /// By Ritter des Todes
{$I BaseBuild.script}
{$I Attacks.script}

var
X: array[0..1] of Boolean;
C: array[0..14] of Integer;
IronCollected, IronRequired, Sabotage: Integer;
playersWhoWin: array of integer;
AIMarket: array[0..5] of Integer;
AIsabotage: array[0..19] of Integer;
pointxy: TKMPoint;
AIattack: array[0..2] of Boolean;

function TotalResourceAmount(iPlayer, iType: Byte): Integer;
var
	i, iTotalResourceAmount: Integer;
	aHouses: array of Integer;
begin
	Result := -1;
	aHouses := States.PlayerGetAllHouses(iPlayer);
	for i := 0 to Length(aHouses) -1 do
	begin
		if (States.HouseType(aHouses[i]) = 11) then 
			iTotalResourceAmount := iTotalResourceAmount +States.HouseResourceAmount(aHouses[i], iType);
		if (Result = -1) and (i = (Length(aHouses) -1)) then
			Result := iTotalResourceAmount;
	end;
end;

Procedure ChangeHouseOwner(aX,aY, toPlayer:Integer);
var aHouseWares : array[0..27] of integer;
	aHouseID, newHouseID, aHType, aDamage : Integer;
	HousePos : TKMPoint;
	I : Integer;
begin
	If States.HouseAt(aX,aY) > 0 then 
	begin
		aHouseID := States.HouseAt(aX,aY);
		HousePos := States.HousePosition(aHouseID);
		aHType := States.HouseType(aHouseID);
		aDamage := States.HouseDamage(aHouseID);
		for I := 0 to 27 do 
			aHouseWares[I] := States.HouseResourceAmount(aHouseID,I);
		
		Actions.HouseDestroy(aHouseID, true);
		newHouseID := Actions.GiveHouse(toPlayer,aHType,HousePos.X,HousePos.Y);
		for I := 0 to 27 do
			If aHouseWares[I]>0 then Actions.HouseAddWaresTo(newHouseID,I,aHouseWares[I]);
			
		Actions.HouseAddDamage(newHouseID,aDamage);
	end;
end;

procedure OnMissionStart();	
begin
DCB_Mode := DCB_ALL;
A.ShowMsgGoto(0, 29, 29,'<$2>');
AttackPrep:= 36000000000;
Sabotage:= 360000000000;
playersWhoWin := [0];    
AIMarket[0]:= S.HouseAt(11, 109);
AIMarket[1]:= S.HouseAt(17, 104);
AIMarket[2]:= S.HouseAt(81, 69);
AIMarket[3]:= S.HouseAt(88, 71);
AIMarket[4]:= S.HouseAt(108, 27);
AIMarket[5]:= S.HouseAt(115, 29);
AIsabotage[0]:= S.HouseAt(53, 15);
AIsabotage[1]:= S.HouseAt(46, 19);
AIsabotage[2]:= S.HouseAt(41, 20);
AIsabotage[3]:= S.HouseAt(33, 25);
AIsabotage[4]:= S.HouseAt(11, 28);
AIsabotage[5]:= S.HouseAt(22, 33);
AIsabotage[6]:= S.HouseAt(35, 29);
AIsabotage[7]:= S.HouseAt(32, 32);
AIsabotage[8]:= S.HouseAt(37, 32);
AIsabotage[9]:= S.HouseAt(41, 34);
AIsabotage[10]:= S.HouseAt(37, 36);
AIsabotage[11]:= S.HouseAt(46, 34);
AIsabotage[12]:= S.HouseAt(51, 36);
AIsabotage[13]:= S.HouseAt(51, 31);
AIsabotage[14]:= S.HouseAt(53, 27);
AIsabotage[15]:= S.HouseAt(57, 30);
AIsabotage[16]:= S.HouseAt(33, 44);
AIsabotage[17]:= S.HouseAt(34, 47);
AIsabotage[18]:= S.HouseAt(43, 54);
AIsabotage[19]:= S.HouseAt(27, 41);
X[0]:= false;
X[1]:= false;
AIattack[0]:= false;
AIattack[1]:= false;
AIattack[2]:= false;
DifficultySetting := S.MissionDifficulty();
AttackToken:= (S.KaMRandomI(3));
A.MarketSetTrade((S.HouseAt(27, 41)), WARE_IRON, WARE_CORN, 15);
    case DifficultySetting of
	    mdEasy1:
        begin
		A.GiveGroup(1, UNIT_LANCE_CARRIER, 22, 28, DIRECTION_NW, 8, 4);
		A.GiveGroup(1, UNIT_LANCE_CARRIER, 29, 24, DIRECTION_NW, 8, 4);
		A.GiveGroup(1, UNIT_BOWMAN, 24, 29, DIRECTION_NW, 6, 3);
		A.GiveGroup(1, UNIT_BOWMAN, 29, 27, DIRECTION_NW, 6, 3);
		A.GiveGroup(1, UNIT_MILITIA, 35, 52, DIRECTION_SW, 6, 3);
		A.GiveGroup(1, UNIT_MILITIA, 55, 18, DIRECTION_W, 6, 3);
		A.AIEquipRate(2, 0, 500);
		A.AIEquipRate(2, 1, 300);
		A.AIEquipRate(3, 0, 500);
		A.AIEquipRate(3, 1, 300);
		A.AIEquipRate(4, 0, 500);
		A.AIEquipRate(4, 1, 300);
		IronRequired:= 575;
		end;
		
		mdNormal:
        begin
		A.GiveGroup(1, UNIT_LANCE_CARRIER, 22, 28, DIRECTION_NW, 8, 4);
		A.GiveGroup(1, UNIT_LANCE_CARRIER, 29, 24, DIRECTION_NW, 8, 4);
		A.GiveGroup(1, UNIT_CROSSBOWMAN, 24, 29, DIRECTION_NW, 6, 3);
		A.GiveGroup(1, UNIT_CROSSBOWMAN, 29, 27, DIRECTION_NW, 6, 3);
		A.GiveGroup(1, UNIT_AXE_FIGHTER, 35, 52, DIRECTION_SW, 6, 3);
		A.GiveGroup(1, UNIT_AXE_FIGHTER, 55, 18, DIRECTION_W, 6, 3);
		A.AIEquipRate(2, 0, 325);
		A.AIEquipRate(2, 1, 200);
		A.AIEquipRate(3, 0, 325);
		A.AIEquipRate(3, 1, 200);
		A.AIEquipRate(4, 0, 325);
		A.AIEquipRate(4, 1, 200);		
		IronRequired:= 650;
		end;
		
		mdHard1:
        begin
		A.GiveGroup(1, UNIT_LANCE_CARRIER, 22, 28, DIRECTION_NW, 10, 5);
		A.GiveGroup(1, UNIT_LANCE_CARRIER, 29, 24, DIRECTION_NW, 10, 5);
		A.GiveGroup(1, UNIT_CROSSBOWMAN, 24, 29, DIRECTION_NW, 6, 3);
		A.GiveGroup(1, UNIT_CROSSBOWMAN, 29, 27, DIRECTION_NW, 6, 3);
		A.GiveGroup(1, UNIT_AXE_FIGHTER, 35, 52, DIRECTION_SW, 9, 3);
		A.GiveGroup(1, UNIT_AXE_FIGHTER, 55, 18, DIRECTION_W, 9, 3);
        A.AIEquipRate(2, 0, 250);
		A.AIEquipRate(2, 1, 100);
		A.AIEquipRate(3, 0, 250);
		A.AIEquipRate(3, 1, 100);
		A.AIEquipRate(4, 0, 250);
		A.AIEquipRate(4, 1, 100);
        IronRequired:= 725;		
		end;
    end;
end;

procedure OnTick();
var
i: Integer;

begin
if (States.GameTime MOD 10 = 0) and (S.PlayerDefeated(1) = true) then begin
    IronCollected:= TotalResourceAmount(0, WARE_IRON);
	if IronCollected < IronRequired then
	begin
		A.OverlayTextSet(0, '<$1>: ' + inttostr(IronCollected)+ '/' + inttostr(IronRequired) + '');
	end	else
		A.OverlayTextSet(0, '<$1>[$5BD75B]: ' + inttostr(IronCollected)+ '/' + inttostr(IronRequired) + '[]');
end;

if (S.GameTime MOD 10 = 0) and (S.PlayerDefeated(1) = true) and (S.PlayerDefeated(2) = true) and (S.PlayerDefeated(3) = true) and (S.PlayerDefeated(4) = true) and (IronCollected >= IronRequired) then
    begin
	A.PlayerWin(playersWhoWin,True);
	end;
		
if (States.GameTime MOD 5000 = 0) then begin
    if (AIMarket[0] <> -1) and (S.HouseDestroyed(AIMarket[0]) = false) and (S.HouseType(AIMarket[0]) = HOUSE_MARKETPLACE) then begin
        A.MarketSetTrade((AIMarket[0]), WARE_IRON, WARE_CORN, 10);
        end;
		
	if (AIMarket[2] <> -1) and (S.HouseDestroyed(AIMarket[2]) = false) and (S.HouseType(AIMarket[2]) = HOUSE_MARKETPLACE) then begin
        A.MarketSetTrade((AIMarket[2]), WARE_IRON, WARE_COAL, 10);
        end;	

    if (AIMarket[4] <> -1) and (S.HouseDestroyed(AIMarket[4]) = false) and (S.HouseType(AIMarket[4]) = HOUSE_MARKETPLACE) then begin
        A.MarketSetTrade((AIMarket[4]), WARE_IRON, WARE_CORN, 10);
        end;
	end;		
		
if (States.GameTime MOD 7500 = 0) then
	begin
    if (AIMarket[1] <> -1) and (S.HouseDestroyed(AIMarket[1]) = false) and (S.HouseType(AIMarket[1]) = HOUSE_MARKETPLACE) then begin
        A.MarketSetTrade((AIMarket[1]), WARE_IRON, WARE_LEATHER, 10);
        end;
		
	if (AIMarket[3] <> -1) and (S.HouseDestroyed(AIMarket[3]) = false) and (S.HouseType(AIMarket[3]) = HOUSE_MARKETPLACE) then begin
        A.MarketSetTrade((AIMarket[3]), WARE_IRON, WARE_LEATHER, 10);
        end;
		
	if (AIMarket[5] <> -1) and (S.HouseDestroyed(AIMarket[5]) = false) and (S.HouseType(AIMarket[5]) = HOUSE_MARKETPLACE) then begin
        A.MarketSetTrade((AIMarket[5]), WARE_IRON, WARE_LEATHER, 10);
        end;	
	end;
	
if S.GameTime = (Sabotage + 10) then
    for i := 0 to 19 do
    begin
	A.HouseAddDamage((AIsabotage[i]), 75);
	end;
	
if S.GameTime = (Sabotage + 40) then
    begin
	for i := 0 to 19 do
	A.HouseAddDamage((AIsabotage[i]), 75);
	end;

if S.GameTime = (Sabotage + 70) then
    begin
	for i := 0 to 19 do
	A.HouseDestroy(AIsabotage[i], false);
	A.ShowMsg(0,'<$5>');
	end;
	
////////////////////////////////////MINER TROOPS ATTACK//////////////////////////////////////////////////////
if (S.StatArmyCount(2) >= 136) and (AIattack[0] = false) and (S.GameTime MOD 10 = 0) then
    begin
	A.AIDefencePositionRemove(2, 91, 46);
	A.AIDefencePositionRemove(2, 87, 39);
	A.AIDefencePositionRemove(2, 84, 40);
	A.AIDefencePositionRemove(2, 87, 48);
	AIattack[0]:= true;
	end;
	
if (S.StatArmyCount(2) < 102) and (AIattack[0] = true) and (S.GameTime MOD 10 = 0) then
    begin
	A.AIDefencePositionAdd(2, 91, 46, DIRECTION_SW, GROUP_MELEE, 15, 0);
	A.AIDefencePositionAdd(2, 87, 39, DIRECTION_W, GROUP_ANTIHORSE, 12, 0);
	A.AIDefencePositionAdd(2, 84, 40, DIRECTION_W, GROUP_RANGED, 12, 0);
	A.AIDefencePositionAdd(2, 87, 48, DIRECTION_SW, GROUP_RANGED, 11, 0);
	AIattack[0]:= false;
	end;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////		
if (S.StatArmyCount(4) > 139) and (AIattack[1] = false) and (S.GameTime MOD 10 = 0) then
    begin
	A.AIDefencePositionRemove(4, 34, 109);
	A.AIDefencePositionRemove(4, 25, 112);
	A.AIDefencePositionRemove(4, 11, 88);
	A.AIDefencePositionRemove(4, 45, 99);
	A.AIDefencePositionAdd(4, 21, 63, DIRECTION_N, GROUP_MELEE, 15, 0);
	A.AIDefencePositionAdd(4, 16, 63, DIRECTION_N, GROUP_ANTIHORSE, 15, 0);
	A.AIDefencePositionAdd(4, 25, 62, DIRECTION_N, GROUP_RANGED, 15, 0);
	A.AIDefencePositionAdd(4, 12, 62, DIRECTION_N, GROUP_RANGED, 15, 0);
	AIattack[1]:= true;
	end;
	
if (S.StatArmyCount(4) >= 144) and (AIattack[1] = true) and (S.GameTime MOD 10 = 0) then
    begin
	A.AIDefencePositionRemove(4, 21, 63);
	A.AIDefencePositionRemove(4, 16, 63);
	A.AIDefencePositionRemove(4, 25, 62);
	A.AIDefencePositionRemove(4, 12, 62);
	A.AIAttackAdd(4, True, 1, 1, 1, 0, 0, 0, false, attClosestBuildingFromStartPos, pointxy);
	A.AIAttackAdd(4, True, 1, 1, 0, 1, 0, 0, false, attClosestBuildingFromStartPos, pointxy);
	A.AIAttackAdd(4, True, 1, 1, 0, 0, 1, 0, false, attClosestUnit, pointxy);
	end;	
	
if (S.StatArmyCount(4) < 112) and (AIattack[1] = true) and (S.GameTime MOD 10 = 0) then
    begin
	A.AIDefencePositionAdd(4, 11, 88, DIRECTION_N, GROUP_MELEE, 28, 0);
	A.AIDefencePositionAdd(4, 45, 99, DIRECTION_N, GROUP_ANTIHORSE, 24, 0);
	A.AIDefencePositionAdd(4, 34, 109, DIRECTION_S, GROUP_RANGED, 38, 0);
	A.AIDefencePositionAdd(4, 25, 112, DIRECTION_SE, GROUP_RANGED, 45, 0);
	A.AIAttackRemoveAll(4);
	AIattack[1]:= false;
	end;	
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
if (S.StatArmyCount(3) > 131) and (AIattack[2] = false) and (S.GameTime MOD 10 = 0) then
    begin
	A.AIDefencePositionRemove(3, 89, 91);
	A.AIDefencePositionRemove(3, 89, 66);
	A.AIDefencePositionRemove(3, 102, 67);
	A.AIDefencePositionRemove(3, 79, 100);
	A.AIDefencePositionAdd(3, 61, 85, DIRECTION_NW, GROUP_MELEE, 15, 0);
	A.AIDefencePositionAdd(3, 61, 86, DIRECTION_NW, GROUP_ANTIHORSE, 15, 0);
	A.AIDefencePositionAdd(3, 64, 88, DIRECTION_NW, GROUP_RANGED, 15, 0);
	A.AIDefencePositionAdd(3, 64, 89, DIRECTION_NW, GROUP_RANGED, 15, 0);
	AIattack[2]:= true;
	end;
	
if (S.StatArmyCount(3) >= 136) and (AIattack[2] = true) and (S.GameTime MOD 10 = 0) then
    begin
	A.AIDefencePositionRemove(3, 61, 85);
	A.AIDefencePositionRemove(3, 61, 86);
	A.AIDefencePositionRemove(3, 64, 88);
	A.AIDefencePositionRemove(3, 64, 89);
	A.AIAttackAdd(3, True, 1, 1, 1, 0, 0, 0, false, attClosestBuildingFromStartPos, pointxy);
	A.AIAttackAdd(3, True, 1, 1, 0, 1, 0, 0, false, attClosestBuildingFromStartPos, pointxy);
	A.AIAttackAdd(3, True, 1, 1, 0, 0, 1, 0, false, attClosestUnit, pointxy);
	end;	
	
if (S.StatArmyCount(3) < 112) and (AIattack[2] = true) and (S.GameTime MOD 10 = 0) then
    begin
	A.AIDefencePositionAdd(3, 89, 91, DIRECTION_S, GROUP_MELEE, 35, 0);
	A.AIDefencePositionAdd(3, 89, 66, DIRECTION_W, GROUP_ANTIHORSE, 25, 0);
	A.AIDefencePositionAdd(3, 102, 67, DIRECTION_NE, GROUP_RANGED, 36, 0);
	A.AIDefencePositionAdd(3, 79, 100, DIRECTION_SW, GROUP_RANGED, 20, 0);
	A.AIAttackRemoveAll(3);
	AIattack[2]:= false;
	end;	
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
end;	

procedure OnPlayerDefeated(aIndex: Integer);
begin
if  (aIndex = 1) then begin
	Sabotage:= S.GameTime;
	C[0]:= A.GiveUnit(0, UNIT_SERF, 2, 2, 0);
	C[1]:= A.GiveUnit(0, UNIT_SERF, 3, 2, 0);
	C[2]:= A.GiveUnit(0, UNIT_SERF, 4, 2, 0);
	C[3]:= A.GiveUnit(0, UNIT_SERF, 5, 2, 0);
	C[4]:= A.GiveUnit(0, UNIT_SERF, 6, 2, 0);
	C[5]:= A.GiveUnit(0, UNIT_SERF, 7, 2, 0);
	C[6]:= A.GiveUnit(0, UNIT_LABORER, 5, 3, 0);
	C[7]:= A.GiveUnit(0, UNIT_LABORER, 6, 3, 0);
	C[8]:= A.GiveUnit(0, UNIT_LABORER, 7, 3, 0);
	C[9]:= A.GiveUnit(0, UNIT_LABORER, 8, 3, 0);
	C[10]:= A.GiveUnit(0, UNIT_METALLURGIST, 3, 5, 0);
	C[11]:= A.GiveUnit(0, UNIT_METALLURGIST, 4, 5, 0);
	C[12]:= A.GiveUnit(0, UNIT_METALLURGIST, 5, 5, 0);
	C[13]:= A.GiveUnit(0, UNIT_STONE_MASON, 1, 1, 0);
	C[14]:= A.GiveUnit(0, UNIT_STONE_MASON, 1, 2, 0);
	A.UnitOrderWalk(C[0], 34, 42);
	A.UnitOrderWalk(C[1], 35, 42);
	A.UnitOrderWalk(C[2], 36, 42);
	A.UnitOrderWalk(C[3], 34, 43);
	A.UnitOrderWalk(C[4], 35, 43);
	A.UnitOrderWalk(C[5], 36, 43);
	A.UnitOrderWalk(C[6], 34, 44);
	A.UnitOrderWalk(C[7], 35, 44);
	A.UnitOrderWalk(C[8], 34, 45);
	A.UnitOrderWalk(C[9], 35, 45);
	A.UnitOrderWalk(C[10], 26, 37);
	A.UnitOrderWalk(C[11], 31, 36);
	A.UnitOrderWalk(C[12], 47, 39);
	A.UnitOrderWalk(C[13], 17, 40);
	A.UnitOrderWalk(C[14], 39, 45);
	ChangeHouseOwner(36, 41, 0);
    ChangeHouseOwner(41, 39, 0);
    ChangeHouseOwner(39, 44, 0);
    ChangeHouseOwner(17, 39, 0);
    ChangeHouseOwner(26, 36, 0);
    ChangeHouseOwner(31, 35, 0);
    ChangeHouseOwner(47, 38, 0);
	ChangeHouseOwner(32, 39, 0);
	A.HouseDeliveryBlock(S.HouseAt(36, 41), false);
	A.PlayerGoalsRemoveAll(0, false);
	X[0]:= true;
	A.ShowMsg(0,'<$3>'+ inttostr(IronRequired)+ '<$4>');
	case DifficultySetting of
	    mdEasy1:
        begin
		A.GiveWares(0, WARE_GOLD, 420);
		A.GiveWares(0, WARE_STONES, 80);
		A.GiveWares(0, WARE_TIMBER, 70);
		A.GiveWares(0, WARE_WINE, 70);
		A.GiveWares(0, WARE_LOAVES, 70);
		end;
		
		mdNormal:
        begin
		A.GiveWares(0, WARE_GOLD, 385);
		A.GiveWares(0, WARE_STONES, 65);
		A.GiveWares(0, WARE_TIMBER, 60);
		A.GiveWares(0, WARE_WINE, 70);
		A.GiveWares(0, WARE_LOAVES, 60);
		end;
		
		mdHard1:
        begin
		A.GiveWares(0, WARE_GOLD, 350);
		A.GiveWares(0, WARE_STONES, 50);
		A.GiveWares(0, WARE_TIMBER, 50);
		A.GiveWares(0, WARE_WINE, 60);
		A.GiveWares(0, WARE_LOAVES, 60);
		end;
    end;
	end;
	
if ((((S.PlayerDefeated(2) = true) and (S.PlayerDefeated(3) = true) and (S.PlayerDefeated(4) = true)) and (IronCollected < IronRequired)) and (X[1] = false)) then begin
    A.ShowMsg(0,'<$9>');
	X[1]:= true;
    end;
end;	

procedure OnHouseDamaged(aHouse: Integer; aAttacker: Integer);
begin
if (S.PlayerDefeated(1) = false) and (S.HouseDamage(S.HouseAt(36, 41)) = 250) and (X[0] = false) then begin
     ChangeHouseOwner(36, 41, 0);
     X[0]:= true;
     end;
end;

procedure OnHouseDestroyed(aHouseID: Integer; aDestroyerIndex: Integer);
begin
if (X[0] = true) and (S.StatHouseTypeCount(0, HOUSE_STOREHOUSE) = 0) then begin
    A.PlayerDefeat(0);
    end;
end;
