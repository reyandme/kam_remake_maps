{$EVENT evtMissionStart:GroupScannerOnMissionStart}

function UnitTypeExToStr(Input: TKMUnitType): String;
begin
	case Input of
		utMilitia: Result := 'utMilitia';
	    utAxeFighter: Result := 'utAxeFighter';
	    utSwordFighter: Result := 'utSwordFighter';
	    utBowman: Result := 'utBowman';
	    utCrossbowman: Result := 'utCrossbowman';
	    utLanceCarrier: Result := 'utLanceCarrier';
	    utPikeman: Result := 'utPikeman';
	    utScout: Result := 'utScout';
	    utKnight: Result := 'utKnight';
	    utBarbarian: Result := 'utBarbarian';
	    utRebel: Result := 'utRebel';
	    utRogue: Result := 'utRogue';
	    utWarrior: Result := 'utWarrior';
	    utVagabond: Result := 'utVagabond';
    end;
end;

function DirectionExToStr(Input: TKMDirection): String;
begin
	case Input of
		dirNA: Result := 'dirNA';
		dirN: Result := 'dirN';
		dirNE: Result := 'dirNE';
		dirE: Result := 'dirE';
		dirSE: Result := 'dirSE';
		dirS: Result := 'dirS';
		dirSW: Result := 'dirSW';
		dirW: Result := 'dirW';
		dirNW: Result := 'dirNW';
	end;
end;


procedure GroupScannerOnMissionStart();
var
	p: Integer;
	Groups: array of Integer;
	GroupLeader: Integer;
	g: Integer;
begin
	for p := 0 to States.StatPlayerCount() -1 do
	begin
		Groups := States.PlayerGetAllGroups(p);
		Actions.Log('//Groups of Player' +inttostr(p));

		for g := Low(Groups) to High(Groups) do
		begin
			GroupLeader :=  States.GroupMember(Groups[g], 0);
			Actions.Log('Actions.GiveGroupEx(' + inttostr(p) + ', ' + UnitTypeExToStr(States.UnitTypeEx(GroupLeader)) + ', ' + inttostr(States.UnitPositionX(GroupLeader)) + ', ' + inttostr(States.UnitPositionY(GroupLeader)) + ', ' + DirectionExToStr(States.UnitDirectionEx(GroupLeader)) + ', ' + inttostr(States.GroupMemberCount(Groups[g])) + ', ' + inttostr(States.GroupColumnCount(Groups[g])) + ');');
			if States.GroupOrder(Groups[g]) = goWalkTo  then
			begin
				Actions.Log('Actions.GroupOrderWalkEx(' + inttostr(Groups[g]) + ', X, Y, ' + DirectionExToStr(States.UnitDirectionEx(GroupLeader)) + ');');
			end;
		end;

		Actions.Log(' ');
	end;
end;