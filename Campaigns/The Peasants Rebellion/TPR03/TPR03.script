//-- TPR03 --//
//29.03.2025

const
	HUMAN_PLAYER = 0;

{$I Helpers.script}
{$I SlowBuildOrder.script}


procedure OnMissionStart();
var
	p: Integer;
	aUnits, aHouses: array of Integer;
	i: Integer;
	aCustomPosition: TKMPoint;
begin
	case States.MissionDifficulty() of
    	mdEasy1: begin
    	    //Groups of Player0
            Actions.GroupHungerSet(Actions.GiveGroupEx(0, utScout, 84, 93, dirSW, 6, 3), States.UnitMaxHunger());

			//Player2
			Actions.AIRecruitDelay(2, MinToTick(75));
            Actions.AIEquipRate(2, 0, 500);
            //Groups of Player2
            Actions.GiveGroupEx(2, utAxeFighter, 44, 58, dirS, 4, 4);
            Actions.GiveGroupEx(2, utAxeFighter, 33, 67, dirSE, 4, 4);
            Actions.GiveGroupEx(2, utLanceCarrier, 39, 61, dirSE, 4, 4);
            Actions.GiveGroupEx(2, utBowman, 35, 72, dirSE, 4, 4);
            Actions.GiveGroupEx(2, utBowman, 39, 67, dirE, 4, 4);

            //Player3
            Actions.AIRecruitDelay(2, MinToTick(75));
            Actions.AIEquipRate(2, 0, 450);
            //Groups of Player3
            Actions.GiveGroupEx(3, utBowman, 95, 60, dirW, 4, 4);
            Actions.GiveGroupEx(3, utBowman, 91, 51, dirW, 4, 4);
            Actions.GiveGroupEx(3, utAxeFighter, 90, 60, dirW, 4, 4);
            Actions.GiveGroupEx(3, utAxeFighter, 74, 15, dirW, 4, 4);
            Actions.GiveGroupEx(3, utScout, 89, 55, dirW, 4, 4);
    	end;
    	mdNormal: begin
			//Groups of Player0
            Actions.GiveGroupEx(0, utScout, 84, 93, dirSW, 6, 3);

            //Groups of Player2
            Actions.GiveGroupEx(2, utAxeFighter, 44, 58, dirS, 4, 4);
            Actions.GiveGroupEx(2, utAxeFighter, 33, 67, dirSE, 4, 4);
            Actions.GiveGroupEx(2, utLanceCarrier, 39, 61, dirSE, 4, 4);
            Actions.GiveGroupEx(2, utBowman, 35, 72, dirSE, 4, 4);
            Actions.GiveGroupEx(2, utBowman, 39, 67, dirE, 4, 4);

            //Groups of Player3
            Actions.GiveGroupEx(3, utBowman, 95, 60, dirW, 4, 4);
            Actions.GiveGroupEx(3, utBowman, 91, 51, dirW, 4, 4);
            Actions.GiveGroupEx(3, utAxeFighter, 90, 60, dirW, 4, 4);
            Actions.GiveGroupEx(3, utAxeFighter, 74, 15, dirW, 4, 4);
            Actions.GiveGroupEx(3, utScout, 89, 55, dirW, 4, 4);
    	end;
    	mdHard1: begin
    	    //Groups of Player0
            Actions.GiveGroupEx(0, utScout, 84, 93, dirSW, 6, 3);

    	    //Player2
    	    //Add Weapons to Barracks
			Actions.GiveWeaponsEx(2, wtWoodenShield, 9000);
			Actions.GiveWeaponsEx(2, wtLeatherArmor, 9000);
			Actions.GiveWeaponsEx(2, wtAxe, 9000);
			Actions.GiveWeaponsEx(2, wtLance, 9000);
			Actions.GiveWeaponsEx(2, wtBow, 9000);
			Actions.GiveWeaponsEx(2, wtHorse, 9000);
			//Basic Setup
			Actions.AIWorkerLimit(2, 6);
			Actions.HouseRepairEnable(2, true);
			Actions.AIRecruitDelay(2, MinToTick(30));
			Actions.AIEquipRate(2, 0, 300);
			//Groups of Player2
            Actions.GiveGroupEx(2, utAxeFighter, 44, 58, dirS, 12, 4);
            Actions.GiveGroupEx(2, utAxeFighter, 33, 67, dirSE, 12, 4);
            Actions.GiveGroupEx(2, utLanceCarrier, 39, 61, dirSE, 12, 4);
            Actions.GiveGroupEx(2, utBowman, 35, 72, dirSE, 12, 4);
            Actions.GiveGroupEx(2, utBowman, 39, 67, dirE, 12, 4);
			//Add Attack Positions
			Actions.AIDefencePositionAdd(2, 8, 50, 4, 0, 25, 1); //Axefighter
			Actions.AIDefencePositionAdd(2, 18, 39, 2, 1, 25, 1); //Lancecarrier
			Actions.AIDefencePositionAdd(2, 15, 47, 3, 2, 25, 1); //Bowmen
			//Add Attack
			Actions.AIAttackAdd(2, true, 0, 36, 1, 1, 1, 0, false, attClosestBuildingFromArmy, aCustomPosition);

			//Player3
			//Add Weapons to Barracks
			Actions.GiveWeaponsEx(3, wtWoodenShield, 9000);
            Actions.GiveWeaponsEx(3, wtLeatherArmor, 9000);
            Actions.GiveWeaponsEx(3, wtAxe, 9000);
            Actions.GiveWeaponsEx(3, wtLance, 9000);
            Actions.GiveWeaponsEx(3, wtBow, 9000);
            Actions.GiveWeaponsEx(3, wtHorse, 9000);
			//Basic Setup
			Actions.AIWorkerLimit(3, 6);
            Actions.HouseRepairEnable(3, true);
            Actions.AIRecruitDelay(3, MinToTick(30));
            Actions.AIEquipRate(3, 0, 250);
            //Groups of Player3
            Actions.GiveGroupEx(3, utBowman, 95, 60, dirW, 12, 4);
            Actions.GiveGroupEx(3, utBowman, 91, 51, dirW, 12, 4);
            Actions.GiveGroupEx(3, utAxeFighter, 90, 60, dirW, 12, 4);
            Actions.GiveGroupEx(3, utAxeFighter, 74, 15, dirW, 12, 4);
            Actions.GiveGroupEx(3, utScout, 89, 55, dirW, 12, 4);
    	end;
    end;

    //Set Hunger Level of AIs
    UnitsRandomHungerSet();

    //Disable Sharing Fog
    for p := 1 to States.StatPlayerCount -1 do
    begin
       	Actions.PlayerShareFogCompliment(HUMAN_PLAYER, p, false);
    end;
    //Cover All In Fog
    Actions.FogCoverAll(HUMAN_PLAYER);

    //Reveal Terrain For Units
    aUnits := States.PlayerGetAllUnits(HUMAN_PLAYER);
    for i := Low(aUnits) to High(aUnits) do
        Actions.FogRevealCircle(HUMAN_PLAYER, States.UnitPositionX(aUnits[i]), States.UnitPositionY(aUnits[i]), UnitSightRange(aUnits[i]));
    //Reveal Terrain For Buildings
    aHouses := States.PlayerGetAllHouses(HUMAN_PLAYER);
    for i := Low(aHouses) to  High(aHouses) do
        Actions.FogRevealCircle(HUMAN_PLAYER, States.HousePositionX(aHouses[i]), States.HousePositionY(aHouses[i]), HouseSightRange(aHouses[i]));

	//Reveal certain areas of the Map to Player0
	Actions.FogRevealCircle(HUMAN_PLAYER, 69, 93, 6);
	Actions.FogRevealCircle(HUMAN_PLAYER, 72, 102, 6);
	Actions.FogRevealCircle(HUMAN_PLAYER, 76, 99, 6);
	Actions.FogRevealCircle(HUMAN_PLAYER, 6, 105, 8);
	Actions.FogRevealCircle(HUMAN_PLAYER, 17, 105, 9);
	Actions.FogRevealCircle(HUMAN_PLAYER, 26, 103, 9);
	Actions.FogRevealCircle(HUMAN_PLAYER, 36, 102, 10);
	Actions.FogRevealCircle(HUMAN_PLAYER, 46, 102, 10);
	Actions.FogRevealCircle(HUMAN_PLAYER, 57, 102, 12);
end;


procedure OnTick;
begin
	//Message After 15 Seconds
	if States.GameTime = 150 then
		Actions.ShowMsg(HUMAN_PLAYER, '<$0>');
end;