//-- TBK04 --//
//04.04.2025

const
	HUMAN_PLAYER = 0;


{$I Helpers.script}
{$I SlowBuildOrder.script}


procedure OnMissionStart();
var
	p: Integer;
	aUnits, aHouses: array of Integer;
	i: Integer;
	aCustomPosition: TKMPoint;
begin
	case States.MissionDifficulty() of
    	mdEasy1: begin
			//Groups of Player0
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utAxeFighter, 28, 71, dirSE, 6, 3), States.UnitMaxHunger());
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utBowman, 28, 66, dirE, 6, 3), States.UnitMaxHunger());

			//Groups of Player1
			Actions.GiveGroupEx(1, utAxeFighter, 81, 100, dirN, 9, 3);
			Actions.GiveGroupEx(1, utRebel, 87, 99, dirNW, 9, 3);
			Actions.GiveGroupEx(1, utRebel, 74, 98, dirNE, 9, 3);

			//Player3
            //Basic Setup
            Actions.AIRecruitDelay(3, MinToTick(80));
            Actions.AIEquipRate(3, 0, 495);
			//Attacks
            Actions.AIAttackRemoveAll(3);
            Actions.AIAttackAdd(3, true, 0, 30, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player3
			Actions.GiveGroupEx(3, utAxeFighter, 130, 80, dirW, 4, 4);
			Actions.GiveGroupEx(3, utAxeFighter, 133, 67, dirW, 4, 4);
			Actions.GiveGroupEx(3, utLanceCarrier, 132, 72, dirW, 4, 4);
			Actions.GiveGroupEx(3, utBowman, 134, 80, dirW, 4, 4);
			Actions.GiveGroupEx(3, utBowman, 136, 71, dirW, 4, 4);
			Actions.GiveGroupEx(3, utBowman, 130, 85, dirNW, 4, 4);

			//Player4
            //Basic Setup
            Actions.AIRecruitDelay(4, MinToTick(45));
            Actions.AIEquipRate(4, 0, 460);

			//Player5
            //Basic Setup
            Actions.AIRecruitDelay(5, MinToTick(53));
            Actions.AIEquipRate(5, 0, 410);
            //Attacks
            Actions.AIAttackRemoveAll(5);
            Actions.AIAttackAdd(5, true, 0, 36, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player5
			Actions.GiveGroupEx(5, utAxeFighter, 74, 16, dirS, 4, 4);
			Actions.GiveGroupEx(5, utAxeFighter, 50, 9, dirW, 4, 4);
			Actions.GiveGroupEx(5, utAxeFighter, 111, 11, dirS, 4, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 69, 16, dirS, 4, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 52, 14, dirSW, 4, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 106, 11, dirS, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 53, 8, dirW, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 73, 13, dirS, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 65, 13, dirS, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 111, 8, dirS, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 96, 14, dirSE, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 58, 14, dirS, 4, 4);
			Actions.GiveGroupEx(5, utScout, 61, 17, dirS, 4, 4);
			Actions.GiveGroupEx(5, utScout, 100, 14, dirS, 4, 4);
			Actions.GiveGroupEx(5, utScout, 79, 14, dirS, 4, 4);

			//Player6
            //Basic Setup
            Actions.AIRecruitDelay(6, MinToTick(60));
            Actions.AIEquipRate(6, 0, 495);
            //Attacks
            Actions.AIAttackRemoveAll(6);
            Actions.AIAttackAdd(6, true, 0, 30, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player6
			Actions.GiveGroupEx(6, utAxeFighter, 122, 30, dirW, 4, 4);
			Actions.GiveGroupEx(6, utAxeFighter, 131, 47, dirSW, 4, 4);
			Actions.GiveGroupEx(6, utAxeFighter, 124, 36, dirW, 4, 4);
			Actions.GiveGroupEx(6, utLanceCarrier, 127, 41, dirSW, 4, 4);
			Actions.GiveGroupEx(6, utLanceCarrier, 121, 25, dirW, 4, 4);
			Actions.GiveGroupEx(6, utBowman, 126, 30, dirW, 4, 4);
			Actions.GiveGroupEx(6, utBowman, 130, 38, dirSW, 4, 4);
			Actions.GiveGroupEx(6, utBowman, 137, 48, dirW, 4, 4);
    	end;
    	mdNormal: begin
			//Groups of Player0
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utAxeFighter, 28, 71, dirSE, 6, 3), States.UnitMaxHunger());
			Actions.GiveGroupEx(HUMAN_PLAYER, utBowman, 28, 66, dirE, 6, 3);

			//Groups of Player1
			Actions.GiveGroupEx(1, utAxeFighter, 81, 100, dirN, 9, 3);
			Actions.GiveGroupEx(1, utRebel, 87, 99, dirNW, 9, 3);
			Actions.GiveGroupEx(1, utRebel, 74, 98, dirNE, 9, 3);

			//Groups of Player3
			Actions.GiveGroupEx(3, utAxeFighter, 130, 80, dirW, 4, 4);
			Actions.GiveGroupEx(3, utAxeFighter, 133, 67, dirW, 4, 4);
			Actions.GiveGroupEx(3, utLanceCarrier, 132, 72, dirW, 4, 4);
			Actions.GiveGroupEx(3, utBowman, 134, 80, dirW, 4, 4);
			Actions.GiveGroupEx(3, utBowman, 136, 71, dirW, 4, 4);
			Actions.GiveGroupEx(3, utBowman, 130, 85, dirNW, 4, 4);

			//Groups of Player5
			Actions.GiveGroupEx(5, utAxeFighter, 74, 16, dirS, 4, 4);
			Actions.GiveGroupEx(5, utAxeFighter, 50, 9, dirW, 4, 4);
			Actions.GiveGroupEx(5, utAxeFighter, 111, 11, dirS, 4, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 69, 16, dirS, 4, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 52, 14, dirSW, 4, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 106, 11, dirS, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 53, 8, dirW, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 73, 13, dirS, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 65, 13, dirS, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 111, 8, dirS, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 96, 14, dirSE, 4, 4);
			Actions.GiveGroupEx(5, utBowman, 58, 14, dirS, 4, 4);
			Actions.GiveGroupEx(5, utScout, 61, 17, dirS, 4, 4);
			Actions.GiveGroupEx(5, utScout, 100, 14, dirS, 4, 4);
			Actions.GiveGroupEx(5, utScout, 79, 14, dirS, 4, 4);

			//Groups of Player6
			Actions.GiveGroupEx(6, utAxeFighter, 122, 30, dirW, 4, 4);
			Actions.GiveGroupEx(6, utAxeFighter, 131, 47, dirSW, 4, 4);
			Actions.GiveGroupEx(6, utAxeFighter, 124, 36, dirW, 4, 4);
			Actions.GiveGroupEx(6, utLanceCarrier, 127, 41, dirSW, 4, 4);
			Actions.GiveGroupEx(6, utLanceCarrier, 121, 25, dirW, 4, 4);
			Actions.GiveGroupEx(6, utBowman, 126, 30, dirW, 4, 4);
			Actions.GiveGroupEx(6, utBowman, 130, 38, dirSW, 4, 4);
			Actions.GiveGroupEx(6, utBowman, 137, 48, dirW, 4, 4);
    	end;
    	mdHard1: begin
			//Groups of Player0
			Actions.GiveGroupEx(HUMAN_PLAYER, utAxeFighter, 28, 71, dirSE, 6, 3);
			Actions.GiveGroupEx(HUMAN_PLAYER, utBowman, 28, 66, dirE, 6, 3);

			//Groups of Player1
			Actions.GiveGroupEx(1, utAxeFighter, 81, 100, dirN, 9, 3);
			Actions.GiveGroupEx(1, utRebel, 87, 99, dirNW, 9, 3);
			Actions.GiveGroupEx(1, utRebel, 74, 98, dirNE, 9, 3);

			//Player3
            //Add Weapons to Barracks
            GiveAllWeapons(3, 0, 9000);
            //Basic Setup
            Actions.AIWorkerLimit(3, 6);
            Actions.HouseRepairEnable(3, true);
            Actions.AIRecruitDelay(3, MinToTick(60));
            Actions.AIEquipRate(3, 0, 385);
            //Attacks
            Actions.AIAttackRemoveAll(3);
            Actions.AIAttackAdd(3, true, 0, 42, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player3
			Actions.GiveGroupEx(3, utAxeFighter, 130, 80, dirW, 8, 4);
			Actions.GiveGroupEx(3, utAxeFighter, 133, 67, dirW, 8, 4);
			Actions.GiveGroupEx(3, utLanceCarrier, 132, 72, dirW, 8, 4);
			Actions.GiveGroupEx(3, utBowman, 134, 80, dirW, 8, 4);
			Actions.GiveGroupEx(3, utBowman, 136, 71, dirW, 8, 4);
			Actions.GiveGroupEx(3, utBowman, 130, 85, dirNW, 8, 4);

			//Player4
            //Add Weapons to Barracks
            GiveAllWeapons(4, 0, 9000);
            //Basic Setup
            Actions.AIWorkerLimit(4, 6);
            Actions.HouseRepairEnable(4, true);
            Actions.AIRecruitDelay(4, MinToTick(45));
            Actions.AIEquipRate(4, 0, 235);

			//Player5
            //Add Weapons to Barracks
            GiveAllWeapons(5, 0, 9000);
            //Basic Setup
            Actions.AIWorkerLimit(5, 6);
            Actions.HouseRepairEnable(5, true);
            Actions.AIDefendAllies(5, true);
            Actions.AIRecruitDelay(5, MinToTick(67));
            Actions.AIEquipRate(5, 0, 255);
            //Attacks
            Actions.AIAttackRemoveAll(5);
            Actions.AIAttackAdd(5, true, 0, 60, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player5
			Actions.GiveGroupEx(5, utAxeFighter, 74, 16, dirS, 8, 4);
			Actions.GiveGroupEx(5, utAxeFighter, 50, 9, dirW, 8, 4);
			Actions.GiveGroupEx(5, utAxeFighter, 111, 11, dirS, 8, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 69, 16, dirS, 8, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 52, 14, dirSW, 8, 4);
			Actions.GiveGroupEx(5, utLanceCarrier, 106, 11, dirS, 8, 4);
			Actions.GiveGroupEx(5, utBowman, 53, 8, dirW, 8, 4);
			Actions.GiveGroupEx(5, utBowman, 73, 13, dirS, 8, 4);
			Actions.GiveGroupEx(5, utBowman, 65, 13, dirS, 8, 4);
			Actions.GiveGroupEx(5, utBowman, 111, 8, dirS, 8, 4);
			Actions.GiveGroupEx(5, utBowman, 96, 14, dirSE, 8, 4);
			Actions.GiveGroupEx(5, utBowman, 58, 14, dirS, 8, 4);
			Actions.GiveGroupEx(5, utScout, 61, 17, dirS, 8, 4);
			Actions.GiveGroupEx(5, utScout, 100, 14, dirS, 8, 4);
			Actions.GiveGroupEx(5, utScout, 79, 14, dirS, 8, 4);

			//Player6
            //Add Weapons to Barracks
            GiveAllWeapons(6, 0, 9000);
            //Basic Setup
            Actions.AIWorkerLimit(6, 6);
            Actions.HouseRepairEnable(6, true);
            Actions.AIRecruitDelay(6, MinToTick(60));
            Actions.AIEquipRate(6, 0, 300);
            //Attacks
            Actions.AIAttackRemoveAll(6);
            Actions.AIAttackAdd(6, true, 0, 42, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player6
			Actions.GiveGroupEx(6, utAxeFighter, 122, 30, dirW, 8, 4);
			Actions.GiveGroupEx(6, utAxeFighter, 131, 47, dirSW, 8, 4);
			Actions.GiveGroupEx(6, utAxeFighter, 124, 36, dirW, 8, 4);
			Actions.GiveGroupEx(6, utLanceCarrier, 127, 41, dirSW, 8, 4);
			Actions.GiveGroupEx(6, utLanceCarrier, 121, 25, dirW, 8, 4);
			Actions.GiveGroupEx(6, utBowman, 126, 30, dirW, 8, 4);
			Actions.GiveGroupEx(6, utBowman, 130, 38, dirSW, 8, 4);
			Actions.GiveGroupEx(6, utBowman, 137, 48, dirW, 8, 4);
    	end;
    end;

    //Set Hunger Level of AIs
    UnitsRandomHungerSet();

    //Disable Sharing Fog
    for p := 1 to States.StatPlayerCount -1 do
    begin
       	Actions.PlayerShareFogCompliment(HUMAN_PLAYER, p, false);
    end;
    //Cover All In Fog
    Actions.FogCoverAll(HUMAN_PLAYER);

    //Reveal Terrain For Units
    aUnits := States.PlayerGetAllUnits(HUMAN_PLAYER);
    for i := Low(aUnits) to High(aUnits) do
    begin
        Actions.FogRevealCircle(HUMAN_PLAYER, States.UnitPositionX(aUnits[i]), States.UnitPositionY(aUnits[i]), UnitSightRange(aUnits[i]));
    end;
    //Reveal Terrain For Buildings
    aHouses := States.PlayerGetAllHouses(HUMAN_PLAYER);
    for i := Low(aHouses) to  High(aHouses) do
    begin
        Actions.FogRevealCircle(HUMAN_PLAYER, States.HousePositionX(aHouses[i]), States.HousePositionY(aHouses[i]), HouseSightRange(aHouses[i]));
    end;
end;


procedure OnTick;
begin
	//Message After 15 Seconds
    if States.GameTime = 150 then
    begin
		Actions.ShowMsg(0, '<$0>');
    end;

	//Message After 600 Seconds
    if States.GameTime = 6000 then
    begin
        Actions.ShowMsg(0, '<$1>');
    end;
end;