{
	Slow Build Order (SBO) script by greeny
	version 1.1

	This script intends to simulate slow build order from original game. It can be easily included into any map and should work for all human players.
}

// Usage: just include it in your map with {$INCLUDE SlowBuildOrder.script}

{$EVENT evtMissionStart:SBO_OnMissionStart}
{$EVENT evtHouseBuilt:SBO_OnHouseBuilt}

type SBOHouseLock = array[0..26] of TKMHandHouseLock;

var
	sboHouseLock: array[0..32] of SBOHouseLock;

// tries to unlock a building for a player (if it wasn't locked in editor)
procedure SBO_TryAllow(player: Integer; houseType: TKMHouseType);
begin
	if (sboHouseLock[Ord(houseType)][player] = hlDefault) then begin
		Actions.PlayerHouseTypeLock(player, houseType, hlGranted);
	end;
end;

// check if player has slow build order enabled (defaults to all human players)
function SBO_PlayerEnabled(player: Integer): Boolean;
begin
	Result := false;

	if (not States.PlayerIsAI(player)) then begin
		Result := true;
	end;
end;

// processes house type (as if it was just built, so tries to unlock new house types that are unlocked by the processed house's type)
procedure SBO_ProcessHouse(player: Integer; houseType: TKMHouseType);
begin
	case (houseType) of
		htStore: begin
			SBO_TryAllow(player, htSchool);
		end;

		htSchool: begin
			SBO_TryAllow(player, htInn);
		end;

		htInn: begin
			SBO_TryAllow(player, htQuarry);
		end;

		htQuarry: begin
			SBO_TryAllow(player, htWoodcutters);
			SBO_TryAllow(player, htWatchTower);
		end;

		htWoodcutters: begin
			SBO_TryAllow(player, htSawmill);
		end;

		htSawmill: begin
			SBO_TryAllow(player, htFarm);
			SBO_TryAllow(player, htVineyard);
			SBO_TryAllow(player, htGoldMine);
			SBO_TryAllow(player, htCoalMine);
			SBO_TryAllow(player, htWeaponWorkshop);
			SBO_TryAllow(player, htIronMine);
			SBO_TryAllow(player, htBarracks);
			SBO_TryAllow(player, htFishermans);
			SBO_TryAllow(player, htMarket);
		end;

		htFarm: begin
			SBO_TryAllow(player, htMill);
			SBO_TryAllow(player, htSwine);
			SBO_TryAllow(player, htStables);
		end;

		htMill: begin
			SBO_TryAllow(player, htBakery);
		end;

		htSwine: begin
			SBO_TryAllow(player, htButchers);
			SBO_TryAllow(player, htTannery);
		end;

		htGoldMine: begin
			SBO_TryAllow(player, htMetallurgists);
		end;

		htMetallurgists: begin
			SBO_TryAllow(player, htTownHall);
		end;

		htTannery: begin
			SBO_TryAllow(player, htArmorWorkshop);
		end;

		htIronMine: begin
			SBO_TryAllow(player, htIronSmithy);
		end;

		htIronSmithy: begin
			SBO_TryAllow(player, htWeaponSmithy);
			SBO_TryAllow(player, htArmorSmithy);
		end;
	end;
end;

// mission start handler, enables slow build order
procedure SBO_OnMissionStart;
var
	houseId: Integer;
	player: Integer;
	house: TKMHouseType;
	houses: array of Integer;
begin
	for house := htArmorSmithy to htWoodcutters do begin
		for player := 0 to 26 do begin
			if (SBO_PlayerEnabled(player)) then begin
				sboHouseLock[Ord(house)][player] := States.PlayerHouseTypeLock(player, house);
				if (not (sboHouseLock[Ord(house)][player] = hlGranted)) then begin
					Actions.PlayerHouseTypeLock(player, house, hlBlocked);
				end;
			end;
		end;
	end;

	for player := 0 to 26 do begin
		if (SBO_PlayerEnabled(player)) then begin
			houses := States.PlayerGetAllHouses(player);

			for houseId := Low(houses) to High(houses) do begin
				SBO_ProcessHouse(player, States.HouseTypeEx(houses[houseId]));
			end;

			SBO_TryAllow(player, htStore);
		end;
	end;
end;

// on house built handler, unlocks new houses
procedure SBO_OnHouseBuilt(house: Integer);
var
	player: Integer;
begin
	player := States.HouseOwner(house);

	if (not SBO_PlayerEnabled(player)) then begin
		exit;
	end;

	SBO_ProcessHouse(player, States.HouseTypeEx(house));
end;
