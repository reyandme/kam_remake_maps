//-- TBK06 --//
//04.04.2025

{$I Helpers.script}
{$I GroupScanner.script}
{$I SlowBuildOrder.script}

const
	HUMAN_PLAYER = 0;


var
	aArmyFirst, aArmySecond, aArmyThird: array[1..5] of Integer;


procedure OnMissionStart();
var
	p: Integer;
	aUnits, aHouses: array of Integer;
	i: Integer;
	aCustomPosition: TKMPoint;
begin
	case States.MissionDifficulty() of
    	mdEasy1: begin
			//Groups of Player0
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utScout, 27, 32, dirSE, 9, 3), States.UnitMaxHunger());
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utLanceCarrier, 20, 35, dirS, 12, 4), States.UnitMaxHunger());
			Actions.GiveGroupEx(HUMAN_PLAYER, utScout, 8, 39, dirS, 12, 4);
			Actions.GiveGroupEx(HUMAN_PLAYER, utLanceCarrier, 14, 38, dirS, 12, 4);
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utAxeFighter, 9, 34, dirS, 20, 5), States.UnitMaxHunger());
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utBowman, 15, 31, dirS, 6, 3), States.UnitMaxHunger());

			//Groups of Player1
			aArmyFirst[1] := Actions.GiveGroupEx(1, utMilitia, 56, 127, dirN, 9, 3);
			aArmyFirst[2] := Actions.GiveGroupEx(1, utLanceCarrier, 62, 129, dirN, 6, 3);
			aArmyFirst[3] := Actions.GiveGroupEx(1, utRogue, 62, 133, dirN, 9, 3);
			aArmyFirst[4] := Actions.GiveGroupEx(1, utScout, 63, 125, dirN, 6, 3);

			//Player2
            //Basic Setup
            Actions.AIWorkerLimit(2, 6);
            Actions.HouseRepairEnable(2, true);
            Actions.AIRecruitDelay(2, MinToTick(15));
            Actions.AIEquipRate(2, 0, 500);
            //Attacks
            Actions.AIAttackRemoveAll(2);
            Actions.AIAttackAdd(2, true, 0, 36, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player2
			Actions.GiveGroupEx(2, utAxeFighter, 37, 114, dirE, 4, 4);
			Actions.GiveGroupEx(2, utAxeFighter, 8, 92, dirNW, 4, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 32, 102, dirNE, 4, 4);
			Actions.GiveGroupEx(2, utBowman, 25, 103, dirNE, 4, 4);
			Actions.GiveGroupEx(2, utBowman, 34, 119, dirE, 4, 4);
			Actions.GiveGroupEx(2, utScout, 37, 107, dirNE, 4, 4);
			Actions.GiveGroupEx(2, utAxeFighter, 26, 99, dirNE, 4, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 37, 119, dirE, 4, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 3, 94, dirN, 4, 4);
			Actions.GiveGroupEx(2, utBowman, 10, 95, dirNW, 4, 4);
			Actions.GiveGroupEx(2, utScout, 37, 124, dirE, 4, 4);
			Actions.GiveGroupEx(2, utScout, 10, 99, dirNW, 4, 4);

			//Groups of Player3
			aArmySecond[1] := Actions.GiveGroupEx(3, utMilitia, 111, 4, dirW, 6, 3);
			aArmySecond[2] := Actions.GiveGroupEx(3, utLanceCarrier, 109, 8, dirW, 6, 3);
			aArmySecond[3] := Actions.GiveGroupEx(3, utVagabond, 114, 5, dirW, 6, 3);
			aArmySecond[4] := Actions.GiveGroupEx(3, utVagabond, 117, 2, dirW, 3, 3);

			//Player4
            //Basic Setup
            Actions.AIRecruitDelay(4, MinToTick(30));
            Actions.AIEquipRate(4, 0, 500);
            //Attacks
            Actions.AIAttackRemoveAll(4);
            Actions.AIAttackAdd(4, true, 0, 36, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player4
			Actions.GiveGroupEx(4, utLanceCarrier, 115, 20, dirW, 4, 4);
			Actions.GiveGroupEx(4, utLanceCarrier, 124, 66, dirsW, 4, 4);
			Actions.GiveGroupEx(4, utBowman, 116, 53, dirSW, 4, 4);
			Actions.GiveGroupEx(4, utBowman, 122, 57, dirSW, 4, 4);
			Actions.GiveGroupEx(4, utBowman, 119, 25, dirW, 4, 4);
			Actions.GiveGroupEx(4, utScout, 111, 57, dirSW, 4, 4);
			Actions.GiveGroupEx(4, utScout, 113, 29, dirW, 4, 4);

			//Groups of Player5
			aArmyThird[1] := Actions.GiveGroupEx(5, utAxeFighter, 80, 132, dirN, 6, 3);
			aArmyThird[2] := Actions.GiveGroupEx(5, utPikeman, 76, 135, dirN, 9, 3);
			aArmyThird[3] := Actions.GiveGroupEx(5, utCrossbowman, 66, 138, dirN, 6, 3);
			aArmyThird[4] := Actions.GiveGroupEx(5, utBowman, 80, 141, dirN, 6, 3);
			aArmyThird[5] := Actions.GiveGroupEx(5, utKnight, 73, 137, dirN, 4, 2);

			//Player6
            //Basic Setup
            Actions.AIWorkerLimit(6, 6);
            Actions.HouseRepairEnable(6, true);
            Actions.AIRecruitDelay(6, MinToTick(25));
            Actions.AIEquipRate(6, 0, 550);
            //Attacks
            Actions.AIAttackRemoveAll(6);
            Actions.AIAttackAdd(6, true, 0, 42, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player6
			Actions.GiveGroupEx(6, utSwordFighter, 101, 118, dirW, 4, 4);
			Actions.GiveGroupEx(6, utPikeman, 100, 127, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 132, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 127, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 122, dirW, 4, 4);
			Actions.GiveGroupEx(6, utKnight, 100, 132, dirW, 4, 4);
			Actions.GiveGroupEx(6, utKnight, 100, 122, dirW, 4, 4);
			Actions.GiveGroupEx(6, utSwordFighter, 104, 105, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 100, 104, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 101, 99, dirW, 4, 4);
			Actions.GiveGroupEx(6, utKnight, 105, 100, dirW, 4, 4);
    	end;
    	mdNormal: begin
			//Groups of Player0
			Actions.GiveGroupEx(HUMAN_PLAYER, utScout, 27, 32, dirSE, 9, 3);
			Actions.GiveGroupEx(HUMAN_PLAYER, utLanceCarrier, 20, 35, dirS, 12, 4);
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utScout, 8, 39, dirS, 12, 4), States.UnitMaxHunger());
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utLanceCarrier, 14, 38, dirS, 12, 4), States.UnitMaxHunger());
			Actions.GiveGroupEx(HUMAN_PLAYER, utAxeFighter, 9, 34, dirS, 20, 5);
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utBowman, 15, 31, dirS, 6, 3), States.UnitMaxHunger());
			 
			//Groups of Player1
			aArmyFirst[1] := Actions.GiveGroupEx(1, utMilitia, 56, 127, dirN, 9, 3);
			aArmyFirst[2] := Actions.GiveGroupEx(1, utLanceCarrier, 62, 129, dirN, 6, 3);
			aArmyFirst[3] := Actions.GiveGroupEx(1, utRogue, 62, 133, dirN, 9, 3);
			aArmyFirst[4] := Actions.GiveGroupEx(1, utScout, 63, 125, dirN, 9, 3);
			 
			//Groups of Player2
			Actions.GiveGroupEx(2, utAxeFighter, 37, 114, dirE, 6, 4);
			Actions.GiveGroupEx(2, utAxeFighter, 8, 92, dirNW, 6, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 32, 102, dirNE, 6, 4);
			Actions.GiveGroupEx(2, utBowman, 25, 103, dirNE, 6, 4);
			Actions.GiveGroupEx(2, utBowman, 34, 119, dirE, 6, 4);
			Actions.GiveGroupEx(2, utScout, 37, 107, dirNE, 6, 4);
			Actions.GiveGroupEx(2, utAxeFighter, 26, 99, dirNE, 6, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 37, 119, dirE, 6, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 3, 94, dirN, 6, 4);
			Actions.GiveGroupEx(2, utBowman, 10, 95, dirNW, 6, 4);
			Actions.GiveGroupEx(2, utScout, 37, 124, dirE, 6, 4);
			Actions.GiveGroupEx(2, utScout, 10, 99, dirNW, 6, 4);
			 
			//Groups of Player3
			aArmySecond[1] := Actions.GiveGroupEx(3, utMilitia, 111, 4, dirW, 6, 3);
			aArmySecond[2] := Actions.GiveGroupEx(3, utLanceCarrier, 109, 8, dirW, 6, 3);
			aArmySecond[3] := Actions.GiveGroupEx(3, utVagabond, 114, 5, dirW, 6, 3);
			aArmySecond[4] := Actions.GiveGroupEx(3, utVagabond, 117, 2, dirW, 6, 3);
			 
			//Groups of Player4
			Actions.GiveGroupEx(4, utLanceCarrier, 115, 20, dirW, 4, 4);
			Actions.GiveGroupEx(4, utLanceCarrier, 124, 66, dirsW, 4, 4);
			Actions.GiveGroupEx(4, utBowman, 116, 53, dirSW, 4, 4);
			Actions.GiveGroupEx(4, utBowman, 122, 57, dirSW, 4, 4);
			Actions.GiveGroupEx(4, utBowman, 119, 25, dirW, 4, 4);
			Actions.GiveGroupEx(4, utScout, 111, 57, dirSW, 4, 4);
			Actions.GiveGroupEx(4, utScout, 113, 29, dirW, 4, 4);
			 
			//Groups of Player5
			aArmyThird[1] := Actions.GiveGroupEx(5, utAxeFighter, 80, 132, dirN, 6, 3);
			aArmyThird[2] := Actions.GiveGroupEx(5, utPikeman, 76, 135, dirN, 9, 3);
			aArmyThird[3] := Actions.GiveGroupEx(5, utCrossbowman, 66, 138, dirN, 6, 3);
			aArmyThird[4] := Actions.GiveGroupEx(5, utBowman, 80, 141, dirN, 6, 3);
			aArmyThird[5] := Actions.GiveGroupEx(5, utKnight, 73, 137, dirN, 6, 2);
			 
			//Groups of Player6
			Actions.GiveGroupEx(6, utSwordFighter, 101, 118, dirW, 4, 4);
			Actions.GiveGroupEx(6, utPikeman, 100, 127, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 132, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 127, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 122, dirW, 4, 4);
			Actions.GiveGroupEx(6, utKnight, 100, 132, dirW, 4, 4);
			Actions.GiveGroupEx(6, utKnight, 100, 122, dirW, 4, 4);
			Actions.GiveGroupEx(6, utSwordFighter, 104, 105, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 100, 104, dirW, 4, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 101, 99, dirW, 4, 4);
			Actions.GiveGroupEx(6, utKnight, 105, 100, dirW, 4, 4);
    	end;
    	mdHard1: begin
			//Groups of Player0
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utScout, 27, 32, dirSE, 9, 3), States.UnitMaxHunger());
			Actions.GiveGroupEx(HUMAN_PLAYER, utLanceCarrier, 20, 35, dirS, 12, 4);
			Actions.GiveGroupEx(HUMAN_PLAYER, utScout, 8, 39, dirS, 12, 4);
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utLanceCarrier, 14, 38, dirS, 12, 4), States.UnitMaxHunger());
			Actions.GiveGroupEx(HUMAN_PLAYER, utAxeFighter, 9, 34, dirS, 20, 5);
			Actions.GroupHungerSet(Actions.GiveGroupEx(HUMAN_PLAYER, utBowman, 15, 31, dirS, 6, 3), States.UnitMaxHunger());

			//Groups of Player1
			aArmyFirst[1] := Actions.GiveGroupEx(1, utMilitia, 56, 127, dirN, 9, 3);
			aArmyFirst[2] := Actions.GiveGroupEx(1, utLanceCarrier, 62, 129, dirN, 6, 3);
			aArmyFirst[3] := Actions.GiveGroupEx(1, utRogue, 62, 133, dirN, 9, 3);
			aArmyFirst[4] := Actions.GiveGroupEx(1, utScout, 63, 125, dirN, 12, 4);

			//Player2
			GiveAllWeapons(2, 0, 9000);
            //Basic Setup
            Actions.AIWorkerLimit(2, 6);
            Actions.HouseRepairEnable(2, true);
            Actions.AIRecruitDelay(2, MinToTick(25));
            Actions.AIEquipRate(2, 0, 300);
            //Attacks
            Actions.AIAttackRemoveAll(2);
            Actions.AIAttackAdd(2, true, 0, 54, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player2
			Actions.GiveGroupEx(2, utAxeFighter, 37, 114, dirE, 9, 4);
			Actions.GiveGroupEx(2, utAxeFighter, 8, 92, dirNW, 9, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 32, 102, dirNE, 9, 4);
			Actions.GiveGroupEx(2, utBowman, 25, 103, dirNE, 9, 4);
			Actions.GiveGroupEx(2, utBowman, 34, 119, dirE, 9, 4);
			Actions.GiveGroupEx(2, utScout, 37, 107, dirNE, 9, 4);
			Actions.GiveGroupEx(2, utAxeFighter, 26, 99, dirNE, 9, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 37, 119, dirE, 9, 4);
			Actions.GiveGroupEx(2, utLanceCarrier, 3, 94, dirN, 9, 4);
			Actions.GiveGroupEx(2, utBowman, 10, 95, dirNW, 9, 4);
			Actions.GiveGroupEx(2, utScout, 37, 124, dirE, 9, 4);
			Actions.GiveGroupEx(2, utScout, 10, 99, dirNW, 9, 4);

			//Groups of Player3
			aArmySecond[1] := Actions.GiveGroupEx(3, utMilitia, 111, 4, dirW, 8, 4);
			aArmySecond[2] := Actions.GiveGroupEx(3, utLanceCarrier, 109, 8, dirW, 6, 3);
			aArmySecond[3] := Actions.GiveGroupEx(3, utVagabond, 114, 5, dirW, 6, 3);
			aArmySecond[4] := Actions.GiveGroupEx(3, utVagabond, 117, 2, dirW, 9, 3);

			//Player4
			GiveAllWeapons(4, 0, 9000);
            //Basic Setup
            Actions.AIRecruitDelay(4, MinToTick(30));
            Actions.AIEquipRate(4, 0, 300);
            //Attacks
            Actions.AIAttackRemoveAll(4);
            Actions.AIAttackAdd(4, true, 0, 54, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player4
			Actions.GiveGroupEx(4, utAxeFighter, 111, 36, dirW, 6, 4);
			Actions.GiveGroupEx(4, utAxeFighter, 118, 61, dirSW, 6, 4);
			Actions.GiveGroupEx(4, utLanceCarrier, 115, 20, dirW, 6, 4);
			Actions.GiveGroupEx(4, utLanceCarrier, 124, 66, dirsW, 6, 4);
			Actions.GiveGroupEx(4, utBowman, 116, 53, dirSW, 6, 4);
			Actions.GiveGroupEx(4, utBowman, 122, 57, dirSW, 6, 4);
			Actions.GiveGroupEx(4, utBowman, 119, 25, dirW, 6, 4);
			Actions.GiveGroupEx(4, utScout, 111, 57, dirSW, 6, 4);
			Actions.GiveGroupEx(4, utScout, 113, 29, dirW, 6, 4);

			//Groups of Player5
			aArmyThird[1] := Actions.GiveGroupEx(5, utAxeFighter, 81, 132, dirN, 8, 4);
			aArmyThird[2] := Actions.GiveGroupEx(5, utPikeman, 76, 135, dirN, 9, 3);
			aArmyThird[3] := Actions.GiveGroupEx(5, utCrossbowman, 66, 138, dirN, 6, 3);
			aArmyThird[4] := Actions.GiveGroupEx(5, utBowman, 81, 141, dirN, 8, 4);
			aArmyThird[5] := Actions.GiveGroupEx(5, utKnight, 73, 137, dirN, 6, 2);

			//Player6
			GiveAllWeapons(6, 1, 9000);
            //Basic Setup
            Actions.AIWorkerLimit(6, 6);
            Actions.HouseRepairEnable(6, true);
            Actions.AIRecruitDelay(6, MinToTick(35));
            Actions.AIEquipRate(6, 0, 380);
            //Attacks
            Actions.AIAttackRemoveAll(6);
            Actions.AIAttackAdd(6, true, 0, 54, 1, 1, 1, 1, true, attClosestBuildingFromStartPos, aCustomPosition);
			//Groups of Player6
			Actions.GiveGroupEx(6, utSwordFighter, 101, 118, dirW, 8, 4);
			Actions.GiveGroupEx(6, utPikeman, 100, 127, dirW, 8, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 132, dirW, 8, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 127, dirW, 8, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 103, 122, dirW, 8, 4);
			Actions.GiveGroupEx(6, utKnight, 100, 132, dirW, 8, 4);
			Actions.GiveGroupEx(6, utKnight, 100, 122, dirW, 8, 4);
			Actions.GiveGroupEx(6, utSwordFighter, 104, 105, dirW, 8, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 100, 104, dirW, 8, 4);
			Actions.GiveGroupEx(6, utCrossbowman, 101, 99, dirW, 8, 4);
			Actions.GiveGroupEx(6, utKnight, 105, 100, dirW, 8, 4);
    	end;
    end;

    //Set Hunger Level of AIs
    UnitsRandomHungerSet();

    //Disable Sharing Fog
    for p := 1 to States.StatPlayerCount -1 do
    begin
       	Actions.PlayerShareFogCompliment(HUMAN_PLAYER, p, false);
    end;
    //Cover All In Fog
    Actions.FogCoverAll(HUMAN_PLAYER);

    //Reveal Terrain For Units
    aUnits := States.PlayerGetAllUnits(HUMAN_PLAYER);
    for i := Low(aUnits) to High(aUnits) do
	begin
        Actions.FogRevealCircle(HUMAN_PLAYER, States.UnitPositionX(aUnits[i]), States.UnitPositionY(aUnits[i]), UnitSightRange(aUnits[i]));
	end;
    //Reveal Terrain For Buildings
    aHouses := States.PlayerGetAllHouses(HUMAN_PLAYER);
    for i := Low(aHouses) to  High(aHouses) do
	begin
        Actions.FogRevealCircle(HUMAN_PLAYER, States.HousePositionX(aHouses[i]), States.HousePositionY(aHouses[i]), HouseSightRange(aHouses[i]));
	end;
end;


procedure OnTick;
begin
	//Message After 5 Seconds
	if States.GameTime = 50 then
		Actions.ShowMsg(0, '<$0>');

	//First Wave Move
	if States.GameTime = 600 then
	begin
		Actions.GroupOrderWalk(aArmyFirst[1], 58, 89, 0);
		Actions.GroupOrderWalk(aArmyFirst[2], 62, 87, 0);
		Actions.GroupOrderWalk(aArmyFirst[3], 66, 90, 0);
		Actions.GroupOrderWalk(aArmyFirst[4], 62, 93, 0);
	end;
	//Second Wave Move
	if States.GameTime = 850 then
    begin
		Actions.GroupOrderWalk(aArmySecond[1], 31, 18, 6);
		Actions.GroupOrderWalk(aArmySecond[2], 32, 23, 6);
		Actions.GroupOrderWalk(aArmySecond[3], 27, 19, 6);
		Actions.GroupOrderWalk(aArmySecond[4], 28, 24, 6);
	end;
	//Third Wave Move
	if States.GameTime = 1200 then
	begin
		Actions.GroupOrderWalk(aArmyThird[1], 65, 89, 0);
		Actions.GroupOrderWalk(aArmyThird[2], 69, 88, 0);
		Actions.GroupOrderWalk(aArmyThird[3], 73, 87, 0);
		Actions.GroupOrderWalk(aArmyThird[4], 67, 94, 0);
		Actions.GroupOrderWalk(aArmyThird[5], 72, 92, 0);
	end;
end;